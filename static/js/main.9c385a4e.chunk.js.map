{"version":3,"sources":["../../src/Star.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["Star","onHover","useState","Math","fill","inKeyboardMode","fillPercentage","fillOpacity","isHighlighted","stroke","isSelected","strokeWidth","className","style","display","touchAction","onMouseOver","onPointerMove","onPointerOver","onMouseDown","event","setIsActive","onMouseUp","onChange","onPointerUp","onMouseLeave","onPointerCancel","onPointerLeave","onTouchStart","onTouchMove","onPointerDown","onTouchEnd","viewBox","width","height","size","id","uniqId","in","stdDeviation","d","opacity","filter","transition","screenReaderOnly","position","padding","margin","overflow","clip","whiteSpace","borderWidth","children","isMount","isMountRef","useRef","useEffect","useIsMounted","child","React","inputRef","input","value","ref","node","inputMode","setValue","onFocus","setHasFocus","onBlur","onKeyDown","setInKeyboardMode","step","parseFloat","min","newValue","decrement","max","increment","event2","CustomEvent","starCount","stars","Array","i","x","key","hoverIndex","setHoverIndex","handleHover","hasFocus","onMouseOut","onClick","onDragStart","App","type","console","log","target","fontSize","href","aria-label","color","top","border","right","aria-hidden","transformOrigin","ReactDOM","render","document","getElementById"],"mappings":"mQAYMA,EAAO,SAAC,GAAD,IAYX,EAOA,EASA,EAOA,EAnCY,EAAD,EAAC,OAAD,EAAC,iBAAD,EAAC,iBAAD,EAAC,gBAAD,EAAC,aAAD,EAAC,SAOZC,EAPW,EAOXA,QAPW,EASqBC,oBAAhC,GATW,mBASL,EATK,KASL,EATK,OAUMA,oBAAS,kBAAMC,KAAhC,YAAM,EAVK,oBA0CX,OA5BEC,EADEC,MAAmCC,EAAvC,EACEF,UAEAA,QAKAG,GADGF,GAAD,IAAqCC,EAAzC,EACEC,GACUF,IAAmBG,GAAiBF,EAAzC,GACLC,IAEAA,EAKAE,EADEC,GAAJ,EACED,UAEAA,UAKAE,EADF,EACEA,IAEAA,EAIA,yBACEC,UAAU,6BACVC,MAAO,CAAEC,QAAF,eAA2BC,YAAa,QAC/CC,YAAa,kBAAMf,KACnBgB,cAAe,WACbhB,KAEFiB,cAAe,WACbjB,KAEFkB,YAAcC,YACZA,mBACAC,OAEFC,UAAW,WACTC,IACAF,OAEFG,YAAa,WACXD,IACAF,OAEFI,aAAc,WACZJ,OAEFK,gBAAiB,WACfL,OAEFM,eAAgB,WACdN,OAEFO,aAAc,WACZ3B,IACAoB,OAEFQ,YAAa,WACX5B,KAEF6B,cAAgBV,YACdA,mBACAnB,IACAoB,OAEFU,WAAY,WACVR,IACAF,QAGF,yBAAKW,QAAQ,YAAYnB,MAAO,CAAEoB,MAAF,EAAeC,OAAQC,IACrD,4BAAQC,GAAE,qBAAgBC,GAAUJ,MAAM,KAAKC,OAAO,MACpD,oCAAgBI,GAAG,gBAAgBC,aAAa,SAElD,0BACEC,EAAE,2FACFpC,KAAK,cACLK,OAAO,UACPE,YAAY,IACZ8B,QAAS/B,OAA6B,EACtCG,MAAO,CACL6B,OAAQ,mBAAF,OADD,EACC,KACNC,WAAY,8BAGhB,0BACEH,EAAE,2FACFpC,KAAMA,EACNK,OAAQA,EACRE,YAAaA,EACbJ,YAAaA,EACbM,MAAO,CACL8B,WAAY,sCCrHlBC,EAAiD,CACrDC,SADqD,WAErDZ,MAFqD,MAGrDC,OAHqD,MAIrDY,QAJqD,IAKrDC,OALqD,OAMrDC,SANqD,SAOrDC,KAPqD,mBAQrDC,WARqD,SASrDC,YAAa,K,EAWI,SAAC,GAAD,IAAC,EAAD,EAAC,KAAQC,EAAT,EAASA,SACpBC,EATa,WACnB,IAAMC,EAAaC,kBAAnB,GAIA,OAHAC,qBAAU,WACRF,eADFE,IAGOF,EAAP,QAIgBG,GACVC,EAAaC,kBAAnB,GACMC,EAAWL,iBAAjB,MAHiB,EAISrD,mBAASwD,QAAnC,OAJiB,mBAIX,EAJW,KAIX,EAJW,OAKmBxD,mBAASwD,QAA7C,OALiB,mBAKX,EALW,KAKX,EALW,OAMexD,oBAAhC,GANiB,mBAMX,EANW,KAMX,EANW,OAO2BA,oBAA5C,GAPiB,mBAOX,EAPW,KAOX,EAPW,KA6BX2D,EAAQ,mBAAqD,CACjEC,QACAC,IAAMC,YAIJ,OAHA,IACEJ,aAEF,GAEFK,UARiE,OASjEpD,MATiE,EAUjEU,SAAWH,YACLA,iBAAJ,GACE8C,EAAS9C,SAAT8C,QAGJC,QAAS,WACPC,OAEFC,OAAQ,WACND,OAEFE,UAAYlD,YACNA,eAAuBA,WAA3B,IACEmD,MAEF,KAAInD,UA7CU,WAChB,IAAMoD,EAAOC,WAAWf,QAAXe,OAAb,EACMC,EAAMD,WAAWf,QAAvB,KACIiB,EAAWF,cAAf,EACI,qBAAOf,QAAP,KAA0CiB,EAA9C,IACEA,KAEFT,KAwCIU,GACK,KAAIxD,WAtCG,WAChB,IAAMoD,EAAOC,WAAWf,QAAXe,OAAb,EACMI,EAAMJ,WAAWf,QAAvB,KACIiB,EAAWF,cAAf,EACI,qBAAOf,QAAP,KAA0CiB,EAA9C,IACEA,KAEFT,KAiCIY,MAKNtB,qBAAU,WACR,MAAc,CACZ,IAAMuB,EAAS,IAAIC,YAAnB,UACApB,WAAoBA,wBAApBA,GACAF,kBAAwBA,iBAAxBA,MAED,CANHF,IAQA,IAmBMyB,EAAY9E,UAAUsE,WAAWZ,QAAXY,MAA5B,GACMS,EAAQC,MAAA,mBAEP,qBAAUC,EAFH,UAGNC,YACJ,IAAM/E,EAAiBmE,WAAWZ,QAAXY,WAAvB,IACA,OACE,qBACEtC,KAAMA,GAAQ,OACdmD,IAAKD,EACL9D,SAAU,WA5BhB2C,EA4BmCmB,IAC7BpF,QAAS,kBA1BIsF,YACnBC,KACAjB,MAwBqBkB,CAAYJ,IAC3B3E,WACEgF,GAAYvF,WAAWsE,WAAWZ,QAAtB1D,UAA8CkF,EAE5D/E,eAAgBA,EAChBE,cAAe+E,GAAcF,EAC7BhF,eAAgBA,OAIxB,OACE,yBACEO,UAAU,wBACV+E,WAAY,kBAAMpB,GAAkB,IACpCqB,QAnCiBxE,YACfA,WAAJ,IACEA,mBACIwC,EAAJ,SACEA,kBAEFW,QA8BAsB,YAAa,kBAAM,G,kBAJrB,EADF,IC7DaC,G,MA1EH,WAKV,OACE,yBAAKjF,MAAO,CAAEiC,QAAS,SACrB,kBAAC,EAAD,CAAYX,KAAK,QACf,2BACE4D,KAAK,SACLxE,SATa,SAACH,GACpB4E,QAAQC,IAAI,gBAAiB7E,EAAM8E,OAAOpC,QASpCY,IAAI,IACJG,IAAI,IACJL,KAAK,IACLV,MAAM,OAIV,yBACEjD,MAAO,CAAEsF,SAAU,WADrB,uTAmBA,uBACEC,KAAK,2CACLxF,UAAU,gBACVyF,aAAW,yBAEX,yBACEpE,MAAO,GACPC,OAAQ,GACRF,QAAQ,cACRnB,MAAO,CACLT,KAAM,UACNkG,MAAO,OACPzD,SAAU,WACV0D,IAAK,EACLC,OAAQ,EACRC,MAAO,GAETC,cAAY,QAEZ,0BAAMlE,EAAE,sDACR,0BACEA,EAAE,2LACFpC,KAAK,eACLS,MAAO,CAAE8F,gBAAiB,eAC1B/F,UAAU,aAEZ,0BACE4B,EAAE,shBACFpC,KAAK,eACLQ,UAAU,mBCjEtBgG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9c385a4e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\ninterface Props {\n  size: string;\n  fillPercentage: number;\n  inKeyboardMode: boolean;\n  isHighlighted: boolean;\n  isSelected: boolean;\n  onChange: Function;\n  onHover: Function;\n}\n\nconst Star = ({\n  size,\n  fillPercentage,\n  inKeyboardMode,\n  isHighlighted,\n  isSelected,\n  onChange,\n  onHover,\n}: Props) => {\n  const [isActive, setIsActive] = useState(false);\n  const [uniqId] = useState(() => Math.random());\n\n  let fill;\n  if (inKeyboardMode || isHighlighted || fillPercentage > 0) {\n    fill = \"#F3A536\";\n  } else {\n    fill = \"white\";\n  }\n\n  let fillOpacity;\n  if ((inKeyboardMode || isHighlighted) && fillPercentage > 0) {\n    fillOpacity = 1;\n  } else if (!inKeyboardMode && (isHighlighted || fillPercentage > 0)) {\n    fillOpacity = 0.35;\n  } else {\n    fillOpacity = 0;\n  }\n\n  let stroke;\n  if (isSelected || isActive) {\n    stroke = \"#0099E0\";\n  } else {\n    stroke = \"#F3A536\";\n  }\n\n  let strokeWidth;\n  if (isActive) {\n    strokeWidth = 1.8;\n  } else {\n    strokeWidth = 1;\n  }\n\n  return (\n    <div\n      className=\"aaronshaf-star-rating-star\"\n      style={{ display: \"inline-block\", touchAction: \"none\" }}\n      onMouseOver={() => onHover()}\n      onPointerMove={() => {\n        onHover();\n      }}\n      onPointerOver={() => {\n        onHover();\n      }}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        setIsActive(true);\n      }}\n      onMouseUp={() => {\n        onChange();\n        setIsActive(false);\n      }}\n      onPointerUp={() => {\n        onChange();\n        setIsActive(false);\n      }}\n      onMouseLeave={() => {\n        setIsActive(false);\n      }}\n      onPointerCancel={() => {\n        setIsActive(false);\n      }}\n      onPointerLeave={() => {\n        setIsActive(false);\n      }}\n      onTouchStart={() => {\n        onHover();\n        setIsActive(true);\n      }}\n      onTouchMove={() => {\n        onHover();\n      }}\n      onPointerDown={(event) => {\n        event.preventDefault();\n        onHover();\n        setIsActive(true);\n      }}\n      onTouchEnd={() => {\n        onChange();\n        setIsActive(false);\n      }}\n    >\n      <svg viewBox=\"0 0 24 24\" style={{ width: size, height: size }}>\n        <filter id={`blurfilter-${uniqId}`} width=\"24\" height=\"24\">\n          <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"0.3\" />\n        </filter>\n        <path\n          d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n          fill=\"transparent\"\n          stroke=\"#0099E0\"\n          strokeWidth=\"1\"\n          opacity={isSelected || isActive ? 1 : 0}\n          style={{\n            filter: `url(#blurfilter-${uniqId})`,\n            transition: \"opacity 0.1s ease-in-out\",\n          }}\n        ></path>\n        <path\n          d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n          fill={fill}\n          stroke={stroke}\n          strokeWidth={strokeWidth}\n          fillOpacity={fillOpacity}\n          style={{\n            transition: \"stroke-width 0.1s ease-in-out\",\n          }}\n        ></path>\n      </svg>\n    </div>\n  );\n};\n\nexport default Star;\n","import React, { useState, useEffect, useRef, ReactElement } from \"react\";\nimport Star from \"./Star\";\n\ninterface Props {\n  size?: string;\n  children: JSX.IntrinsicElements[\"input\"];\n}\n\nconst screenReaderOnly: Partial<CSSStyleDeclaration> = {\n  position: \"absolute\",\n  width: \"1px\",\n  height: \"1px\",\n  padding: \"0\",\n  margin: \"-1px\",\n  overflow: \"hidden\",\n  clip: \"rect(0, 0, 0, 0)\",\n  whiteSpace: \"nowrap\",\n  borderWidth: \"0\",\n};\n\nconst useIsMounted = () => {\n  const isMountRef = useRef(true);\n  useEffect(() => {\n    isMountRef.current = false;\n  }, []);\n  return isMountRef.current;\n};\n\nconst StarRating = ({ size, children }: Props) => {\n  const isMount = useIsMounted();\n  const child: any = React.Children.only(children);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [value, setValue] = useState(child.props.value);\n  const [hoverIndex, setHoverIndex] = useState(child.props.value);\n  const [hasFocus, setHasFocus] = useState(false);\n  const [inKeyboardMode, setInKeyboardMode] = useState(false);\n\n  const decrement = () => {\n    const step = parseFloat(child.props.step) || 1;\n    const min = parseFloat(child.props.min);\n    let newValue = parseFloat(value) - step;\n    if (typeof child.props.min !== \"undefined\" && newValue < min) {\n      newValue = min;\n    }\n    setValue(newValue);\n  };\n\n  const increment = () => {\n    const step = parseFloat(child.props.step) || 1;\n    const max = parseFloat(child.props.max);\n    let newValue = parseFloat(value) + step;\n    if (typeof child.props.max !== \"undefined\" && newValue > max) {\n      newValue = max;\n    }\n    setValue(newValue);\n  };\n\n  const input = React.cloneElement(child as React.ReactElement<any>, {\n    value,\n    ref: (node) => {\n      if (node) {\n        inputRef.current = node;\n      }\n      return node;\n    },\n    inputMode: \"none\",\n    style: screenReaderOnly,\n    onChange: (event) => {\n      if (event.target.value !== value) {\n        setValue(event.target.value);\n      }\n    },\n    onFocus: () => {\n      setHasFocus(true);\n    },\n    onBlur: () => {\n      setHasFocus(false);\n    },\n    onKeyDown: (event) => {\n      if (event.keyCode >= 37 && event.keyCode <= 40) {\n        setInKeyboardMode(true);\n      }\n      if (event.keyCode === 37) {\n        // 'ArrowLeft'\n        decrement();\n      } else if (event.keyCode === 39) {\n        // 'ArrowRight'\n        increment();\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (!isMount) {\n      const event2 = new CustomEvent(\"change\");\n      inputRef.current && inputRef.current.dispatchEvent(event2);\n      child.props.onChange && child.props.onChange(event2);\n    }\n  }, [value]);\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  const handleHover = (hoverIndex) => {\n    setHoverIndex(hoverIndex);\n    setInKeyboardMode(false);\n  };\n\n  const handleClick = (event) => {\n    if (event.target !== input) {\n      event.preventDefault();\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n      setInKeyboardMode(false);\n    }\n  };\n\n  const starCount = Math.ceil(parseFloat(input.props.max) || 5);\n  const stars = Array(starCount)\n    .fill(null)\n    .map((x, i) => i + 1)\n    .map((x) => {\n      const fillPercentage = parseFloat(input.props.value) < x ? 0 : 100;\n      return (\n        <Star\n          size={size || \"1rem\"}\n          key={x}\n          onChange={() => handleChange(x)}\n          onHover={() => handleHover(x)}\n          isSelected={\n            hasFocus && Math.floor(parseFloat(input.props.value)) === x\n          }\n          fillPercentage={fillPercentage}\n          isHighlighted={hoverIndex >= x}\n          inKeyboardMode={inKeyboardMode}\n        />\n      );\n    });\n  return (\n    <div\n      className=\"aaronshaf-star-rating\"\n      onMouseOut={() => setInKeyboardMode(true)}\n      onClick={handleClick}\n      onDragStart={() => false}\n      aria-hidden\n    >\n      {input}\n      {stars}\n    </div>\n  );\n};\n\nexport default StarRating;\n","import React from \"react\";\n\nimport StarRating from \"star-rating\";\nimport \"star-rating/dist/index.css\";\n\nconst App = () => {\n  const handleChange = (event: any) => {\n    console.log(\"value changed\", event.target.value);\n  };\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      <StarRating size=\"2rem\">\n        <input\n          type=\"number\"\n          onChange={handleChange}\n          min=\"1\"\n          max=\"5\"\n          step=\"1\"\n          value=\"0\"\n        />\n      </StarRating>\n\n      <pre\n        style={{ fontSize: \"1.3rem\" }}\n      >{`import React, { Component } from \"react\";\nimport StarRating from \"@aaronshaf/star-rating\";\n\nconst Example = () => {\n  return (\n    <StarRating size=\"2rem\">\n      <input\n        type=\"number\"\n        min=\"1\"\n        max=\"5\"\n        step=\"1\"\n        value=\"0\"\n      />\n    </StarRating>\n  );\n};`}</pre>\n\n      <a\n        href=\"https://github.com/aaronshaf/star-rating\"\n        className=\"github-corner\"\n        aria-label=\"View source on GitHub\"\n      >\n        <svg\n          width={80}\n          height={80}\n          viewBox=\"0 0 250 250\"\n          style={{\n            fill: \"#151513\",\n            color: \"#fff\",\n            position: \"absolute\",\n            top: 0,\n            border: 0,\n            right: 0,\n          }}\n          aria-hidden=\"true\"\n        >\n          <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n          <path\n            d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n            fill=\"currentColor\"\n            style={{ transformOrigin: \"130px 106px\" }}\n            className=\"octo-arm\"\n          />\n          <path\n            d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n            fill=\"currentColor\"\n            className=\"octo-body\"\n          />\n        </svg>\n      </a>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}